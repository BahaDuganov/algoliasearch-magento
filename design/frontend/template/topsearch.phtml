<!--
//================================
//
// Search box
//
//================================
-->

<?php
$config = Mage::helper('algoliasearch/config');
$catalogSearchHelper = $this->helper('catalogsearch');
$price_key = $config->isCustomerGroupsEnabled(Mage::app()->getStore()->getStoreId()) ? '.group_'.$group_id : '.default';

$title = '';
$description = '';
$content = '';
$imgHtml = '';

if($config->isInstantEnabled() && $config->replaceCategories() && Mage::app()->getRequest()->getControllerName() == 'category')
{
    $category = Mage::registry('current_category');
    $title = $category->getName();

    if ($category && $category->getDisplayMode() !== 'PAGE')
    {
        $category->getUrlInstance()->setStore(Mage::app()->getStore()->getStoreId());

        if ($category->getDisplayMode() == 'PRODUCTS_AND_PAGE')
        {
            $page           = $category->getLandingPage();
            $cms_block      = Mage::getModel('cms/block')->load($page);

            $description    = $category->getDescription();
            $content        = $this->getLayout()->createBlock('cms/block')->setBlockId($page)->toHtml();

            if ($category->getImageUrl())
            {
                $imgHtml = '<p class="category-image"><img src="'.$category->getImageUrl().'" alt="'.$this->escapeHtml($category->getName()).'" title="'.$this->escapeHtml($category->getName()).'" /></p>';
                $imgHtml = $this->helper('catalog/output')->categoryAttribute($category, $imgHtml, 'image');
            }
        }
    }
}

$placeholder = $this->__('Search for products, categories, ...');


?>

<form id="search_mini_form" action="<?php echo $catalogSearchHelper->getResultUrl() ?>" method="get">
    <div id="algolia-searchbox">
        <label for="search"><?php echo $this->__('Search:') ?></label>
        <input id="search" type="text" name="<?php echo $catalogSearchHelper->getQueryParamName() ?>" class="input-text algolia-search-input" autocomplete="off" spellcheck="false" autocorrect="off" autocapitalize="off" placeholder="<?php echo $placeholder; ?>" />
        <svg id="algolia-glass" xmlns="http://www.w3.org/2000/svg" class="magnifying-glass" width="24" height="24" viewBox="0 0 128 128" >
            <g transform="scale(4)">
                <path stroke-width="3" d="M19.5 19.582l9.438 9.438"></path>
                <circle stroke-width="3" cx="12" cy="12" r="10.5" fill="none"></circle>
                <path d="M23.646 20.354l-3.293 3.293c-.195.195-.195.512 0 .707l7.293 7.293c.195.195.512.195.707 0l3.293-3.293c.195-.195.195-.512 0-.707l-7.293-7.293c-.195-.195-.512-.195-.707 0z" ></path>
            </g>
        </svg>
    </div>
</form>

<!--
//================================
//
// Multi-category Autocomplete
//
//================================
-->

<!-- Product hit template -->
<script type="text/template" id="autocomplete_products_template">
    <a class="algoliasearch-autocomplete-hit" href="{{url}}">
        {{#thumbnail_url}}
        <div class="thumb"><img src="{{thumbnail_url}}" /></div>
        {{/thumbnail_url}}

        <div class="info">
            {{{_highlightResult.name.value}}}

            {{#categories_without_path}}
            <div class="algoliasearch-autocomplete-category">
                <?php echo $this->__('in'); ?> {{categories_without_path}}
            </div>
            {{/categories_without_path}}
            <div class="algoliasearch-autocomplete-price">
                    <span class="after_special">
                        {{price<?php echo $price_key; ?>_formated}}
                    </span>

                {{#price<?php echo $price_key; ?>_original_formated}}
                    <span class="before_special">
                        {{price<?php echo $price_key; ?>_original_formated}}
                    </span>
                {{/price<?php echo $price_key; ?>_original_formated}}
            </div>
        </div>
    </a>
</script>

<!-- Category hit template -->
<script type="text/template" id="autocomplete_categories_template">
    <a class="algoliasearch-autocomplete-hit" href="{{url}}">
        {{#image_url}}
        <div class="thumb">
            <img src="{{image_url}}" />
        </div>
        {{/image_url}}

        {{#image_url}}
        <div class="info">
            {{/image_url}}
            {{^image_url}}
            <div class="info-without-thumb">
                {{#_highlightResult.path}}
                {{{_highlightResult.path.value}}}
                {{/_highlightResult.path}}
                {{^_highlightResult.path}}
                {{{path}}}
                {{/_highlightResult.path}}

                {{#product_count}}
                <small>( {{product_count}} )</small>
                {{/product_count}}

            </div>
            <div class="clearfix"></div>
            {{/image_url}}
        </div>
    </a>
</script>

<!-- Page hit template -->
<script type="text/template" id="autocomplete_pages_template">
    <a class="algoliasearch-autocomplete-hit" href="{{url}}">
        <div class="info-without-thumb">
            {{{_highlightResult.name.value}}}
        </div>
        <div class="clearfix"></div>
    </a>
</script>

<!-- Extra attribute hit template -->
<script type="text/template" id="autocomplete_extra_template">
    <a class="algoliasearch-autocomplete-hit" href="{{url}}">
        <div class="info-without-thumb">
            {{{_highlightResult.value.value}}}
        </div>
        <div class="clearfix"></div>
    </a>
</script>

<!-- Suggestion hit template -->
<script type="text/template" id="autocomplete_suggestions_template">
    <a class="algoliasearch-autocomplete-hit" href="{{url}}">
        <svg xmlns="http://www.w3.org/2000/svg" class="algolia-glass-suggestion magnifying-glass" width="24" height="24" viewBox="0 0 128 128" >
            <g transform="scale(2.5)">
                <path stroke-width="3" d="M19.5 19.582l9.438 9.438"></path>
                <circle stroke-width="3" cx="12" cy="12" r="10.5" fill="none"></circle>
                <path d="M23.646 20.354l-3.293 3.293c-.195.195-.195.512 0 .707l7.293 7.293c.195.195.512.195.707 0l3.293-3.293c.195-.195.195-.512 0-.707l-7.293-7.293c-.195-.195-.512-.195-.707 0z" ></path>
            </g>
        </svg>
        <div class="info-without-thumb">
            {{{_highlightResult.query.value}}}

            {{#category}}
            <span class="text-muted"><?php echo $this->__('in'); ?></span> <span class="category-tag">{{category}}</span>
            {{/category}}
        </div>
        <div class="clearfix"></div>
    </a>
</script>


<!--
//================================
//
// Instant search results page
//
//================================
-->



<!-- Wrapping template -->
<script type="text/template" id="instant_wrapper_template">
    {{#findAutocomplete}}
        <div id="algolia-autocomplete-container"></div>
    {{/findAutocomplete}}
    <div id="algolia_instant_selector"<?php echo count($config->getFacets()) > 0 ? ' class="with-facets"' : '' ?>>

        <?php if ($title || $imgHtml || $description || $content): ?>
            <div class="row">
                <div class="col-md-12">
                    <div id="algolia-static-content">
                        <div class="page-title category-title">
                            <h1><?php echo $title; ?></h1>
                        </div>
                        <div>
                            <?php echo $imgHtml; ?>
                        </div>
                        <div class="category-description std">
                            <?php echo $description; ?>
                        </div>
                        <?php echo $content; ?>
                    </div>
                </div>
            </div>
        <?php endif; ?>

        <div class="row">
            <div class="col-md-3" id="algolia-left-container">
                <div id="refine-toggle" class="visible-xs visible-sm">+ <?php echo $this->__('Refine'); ?></div>
                <div class="hidden-xs hidden-sm" id="instant-search-facets-container">
                    <div id="current-refinements"></div>
                </div>
            </div>

            <div class="col-md-9" id="algolia-right-container">
                <div class="row">
                    <div class="col-md-12">
                        <div>
                            {{#second_bar}}
                            <div id="instant-search-bar-container">
                                <div id="instant-search-box">
                                    <label for="instant-search-bar">
                                        <?php echo $this->__('Search :'); ?>
                                    </label>

                                    <input placeholder="<?php echo $this->__('Search for products'); ?>" id="instant-search-bar" type="text" autocomplete="off" spellcheck="false" autocorrect="off" autocapitalize="off" />

                                    <svg xmlns="http://www.w3.org/2000/svg" class="magnifying-glass" width="24" height="24" viewBox="0 0 128 128">
                                        <g transform="scale(4)">
                                            <path stroke-width="3" d="M19.5 19.582l9.438 9.438"></path>
                                            <circle stroke-width="3" cx="12" cy="12" r="10.5" fill="none"></circle>
                                            <path d="M23.646 20.354l-3.293 3.293c-.195.195-.195.512 0 .707l7.293 7.293c.195.195.512.195.707 0l3.293-3.293c.195-.195.195-.512 0-.707l-7.293-7.293c-.195-.195-.512-.195-.707 0z"></path>
                                        </g>
                                    </svg>
                                </div>
                            </div>
                            {{/second_bar}}
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div>
                        <div class="hits">
                            <div class="infos">
                                <div class="pull-left" id="algolia-stats"></div>
                                <div class="pull-right" id="algolia-sorts"></div>
                                <div class="clearfix"></div>
                            </div>
                            <div id="instant-search-results-container"></div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>

                <div class="text-center">
                    <div id="instant-search-pagination-container"></div>
                </div>
            </div>
        </div>

    </div>
</script>

<script type="text/template" id="instant-hit-template">
    <div class="col-md-4 col-sm-6">
        <div class="result-wrapper">
            <a href="{{url}}" class="result">
                <div class="result-content">
                    <div class="result-thumbnail">
                        {{#image_url}}<img src="{{{ image_url }}}" />{{/image_url}}
                        {{^image_url}}<span class="no-image"></span>{{/image_url}}
                    </div>
                    <div class="result-sub-content">
                        <h3 class="result-title text-ellipsis">
                            {{{ _highlightResult.name.value }}}
                        </h3>
                        <div class="ratings">
                            <div class="result-sub-content">
                                <div class="ratings">
                                    <div class="rating-box">
                                        <div class="rating" style="width:{{rating_summary}}%" width="148" height="148"></div>
                                    </div>
                                </div>
                                <div class="price">
                                    <div class="price-wrapper">
                                        <div>
                                            <span class="after_special">
                                                {{price<?php echo $price_key; ?>_formated}}
                                            </span>

                                            {{#price<?php echo $price_key; ?>_original_formated}}
                                                <span class="before_special">
                                                    {{price<?php echo $price_key; ?>_original_formated}}
                                                </span>
                                            {{/price<?php echo $price_key; ?>_original_formated}}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="result-description text-ellipsis">{{{ _highlightResult.description.value }}}</div>

                        {{#isAddToCartEnabled}}
                        {{#in_stock}}
                        <form action="<?php echo Mage::getBaseUrl(); ?>/checkout/cart/add/product/{{objectID}}" method="post">
                            <input type="hidden" name="form_key" value="<?php echo Mage::getSingleton('core/session')->getFormKey(); ?>" />
                            <input type="hidden" name="qty" value="1">
                            <button type="submit"><?php echo $this->__('Add to Cart'); ?></button>
                        </form>
                        {{/in_stock}}
                        {{/isAddToCartEnabled}}
                    </div>
                </div>
                <div class="clearfix"></div>
            </a>
        </div>
    </div>
</script>

<script type="text/template" id="instant-stats-template">
    {{#hasNoResults}}<?php echo $this->__('No results'); ?>{{/hasNoResults}}
    {{#hasOneResult}}1 <?php echo $this->__('result'); ?>{{/hasOneResult}}
    {{#hasManyResults}}{{#helpers.formatNumber}}{{nbHits}}{{/helpers.formatNumber}} <?php echo $this->__('results'); ?>{{/hasManyResults}}
    {{#query}}<?php echo $this->__('matching'); ?> "<strong>{{query}}</strong>" {{/query}}
    <?php echo $this->__('in'); ?> {{processingTimeMS}}<?php echo $this->__('ms'); ?>
</script>

<script type="text/template" id="facet-template">
    <div class="sub_facet {{#isRefined}}checked{{/isRefined}}">
        <input class="facet_value" {{#isRefined}}checked{{/isRefined}} type="checkbox">
        {{name}}
        <span class="count">{{count}}</span>
    </div>
</script>


<script type="text/template" id="current-refinements-template">
    <div class="cross-wrapper">
        <img src="<?php echo Mage::getBaseUrl(); ?>/skin/frontend/base/default/algoliasearch/cross.png" />
    </div>
    <div class="current-refinement-wrapper">
        {{#label}}
        <span class="current-refinement-label">{{label}}{{^operator}}:{{/operator}}</span>
        {{/label}}
        {{#operator}}
        {{{displayOperator}}}
        {{/operator}}
        {{#exclude}}-{{/exclude}}
        <span class="current-refinement-name">{{name}}</span>
    </div>
</script>

<script type="text/template" id="menu-template">
    <div class="autocomplete-wrapper">
        <div class="col9">
            <div class="aa-dataset-products"></div>
        </div>
        <div class="col3">
            <div class="other-sections">
                <div class="aa-dataset-suggestions"></div>
                <div class="aa-dataset-1"></div>
                <div class="aa-dataset-2"></div>
                <div class="aa-dataset-3"></div>
            </div>
        </div>
    </div>
</script>

<!--
//================================
//
// JavaScript
//
//================================
-->


<script type="text/javascript">
    //<![CDATA[

    document.addEventListener("DOMContentLoaded", function(event) {
        algoliaBundle.$(function ($) {
            algoliaConfig.autocomplete.templates = {
                suggestions: algoliaBundle.Hogan.compile($('#autocomplete_suggestions_template').html()),
                products: algoliaBundle.Hogan.compile($('#autocomplete_products_template').html()),
                categories: algoliaBundle.Hogan.compile($('#autocomplete_categories_template').html()),
                pages: algoliaBundle.Hogan.compile($('#autocomplete_pages_template').html()),
                additionnalSection: algoliaBundle.Hogan.compile($('#autocomplete_extra_template').html())
            };

            var algolia_client = algoliaBundle.algoliasearch(algoliaConfig.applicationId, algoliaConfig.apiKey);

            if (algoliaConfig.instant.enabled && (algoliaConfig.isSearchPage || !algoliaConfig.autocomplete.enabled))
            {
                if ($(algoliaConfig.instant.selector).length <= 0)
                    throw '[Algolia] Invalid instant-search selector: ' + algoliaConfig.instant.selector;

                if (algoliaConfig.autocomplete.enabled && $(algoliaConfig.instant.selector).find(algoliaConfig.autocomplete.selector).length > 0)
                    throw '[Algolia] You can\'t have a search input matching "' + algoliaConfig.autocomplete.selector +
                    '" inside you instant selector "' + algoliaConfig.instant.selector + '"';

                var instant_selector = !algoliaConfig.autocomplete.enabled ? ".algolia-search-input" : "#instant-search-bar";

                var wrapperTemplate = algoliaBundle.Hogan.compile($('#instant_wrapper_template').html());

                var findAutocomplete = algoliaConfig.autocomplete.enabled && $(algoliaConfig.instant.selector).find('#algolia-autocomplete-container').length > 0;
                $(algoliaConfig.instant.selector).html(wrapperTemplate.render({second_bar: algoliaConfig.autocomplete.enabled, findAutocomplete: findAutocomplete})).show();

                /** Initialise instant search **/
                var search = algoliaBundle.instantsearch({
                    appId: algoliaConfig.applicationId,
                    apiKey: algoliaConfig.apiKey,
                    indexName: algoliaConfig.indexName + '_products',
                    urlSync: {
                        useHash: true,
                        threshold: 5000,
                        trackedParameters: ['query', 'page', 'attribute:*', 'index']
                    }
                });

                search.addWidget({
                    init: function(data) {
                        if (algoliaConfig.request.refinement_key.length > 0) {
                            data.helper.toggleRefine(algoliaConfig.request.refinement_key, algoliaConfig.request.refinement_value);
                        }

                        if (algoliaConfig.request.query.length > 0 && location.hash.length < 1) {
                            data.helper.setQuery(algoliaConfig.request.query);
                        }
                    }
                });

                /** Search bar **/
                search.addWidget(
                    algoliaBundle.instantsearch.widgets.searchBox({
                        container: instant_selector,
                        placeholder: 'Search for products'
                    })
                );

                /** Stats **/
                search.addWidget(
                    algoliaBundle.instantsearch.widgets.stats({
                        container: '#algolia-stats',
                        templates: {
                            body: $('#instant-stats-template').html()
                        }
                    })
                );

                /** Sorts **/
                algoliaConfig.sortingIndices.unshift({
                    name: algoliaConfig.indexName + '_products',
                    label: '<?php echo $this->__('Relevance'); ?>'
                });

                search.addWidget(
                    algoliaBundle.instantsearch.widgets.sortBySelector({
                        container: '#algolia-sorts',
                        indices: algoliaConfig.sortingIndices,
                        cssClass: 'form-control'
                    })
                );

                /** Hits **/
                search.addWidget(
                    algoliaBundle.instantsearch.widgets.hits({
                        container: '#instant-search-results-container',
                        templates: {
                            item: $('#instant-hit-template').html()
                        },
                        transformData: {
                            item: function (hit) {
                                hit = transformHit(hit, algoliaConfig.priceKey);
                                hit.isAddToCartEnabled = algoliaConfig.instant.isAddToCartEnabled;

                                return hit;
                            }
                        },
                        hitsPerPage: algoliaConfig.hitsPerPage
                    })
                );

                search.addWidget({
                    suggestions: "",
                    init: function () {
                        if (algoliaConfig.showSuggestionsOnNoResultsPage) {
                            var $this = this;
                            $.each(algoliaConfig.popularQueries, function (i, query) {
                                query = $('<div>').html(query).text(); //xss
                                $this.suggestions += '<div><a href="' + algoliaConfig.baseUrl + '/catalogsearch/result/?q=' + encodeURIComponent(query) + '">' + query + '</a></div>';
                            });
                        }
                    },
                    render: function (data) {
                        if (data.results.hits.length === 0) {
                            var content = '<div class="no-results">';
                            content += '<div><?php echo $this->__('No results found matching'); ?> "<strong>' + $("<div>").text(data.results.query).html() + '</strong>".</div>';

                            if (algoliaConfig.showSuggestionsOnNoResultsPage && this.suggestions.length > 0) {
                                content += '<div class="popular-searches"><div><h2><?php echo $this->__('Popular searches'); ?></h2></div>' + this.suggestions + '</div>';
                            }

                            content += '</div>';

                            $('#instant-search-results-container').html(content);
                        }
                    }
                });

                /** Facets **/
                var wrapper = document.getElementById('instant-search-facets-container');

                var attributes = [];

                $.each(algoliaConfig.facets, function (i, facet) {
                    var name = facet.attribute;

                    if (name === 'categories') {
                        name = 'categories.level0';
                    }

                    if (name === 'price') {
                        name = facet.attribute + algoliaConfig.priceKey
                    }

                    attributes.push({
                        name: name,
                        label: facet.label ? facet.label : facet.attribute
                    });
                });

                console.log(attributes);

                search.addWidget(
                    algoliaBundle.instantsearch.widgets.currentRefinedValues({
                        container: '#current-refinements',
                        cssClasses: {
                            root: 'facet'
                        },
                        templates: {
                            header: '<div class="name">' + '<?php echo $this->__('Selected Filters'); ?>' + '</div>',
                            item: $('#current-refinements-template').html()
                        },
                        attributes: attributes
                    })
                );

                search.addWidget({
                    render: function (data) {
                        if (data.results.hits.length === 0) {

                        }
                    }
                });

                var customAttributeFacet = {
                    categories: function(facet, templates) {
                        var hierarchical_levels = [];
                        for (var l = 0; l < 10; l++)
                            hierarchical_levels.push('categories.level' + l.toString());

                        var hierarchicalMenuParams = {
                            container: facet.wrapper.appendChild(document.createElement('div')),
                            attributes: hierarchical_levels,
                            separator: ' /// ',
                            alwaysGetRootLevel: true,
                            templates: templates,
                            sortBy: ['name:asc'],
                            cssClasses: {
                                list: 'hierarchical',
                                root: 'facet hierarchical'
                            }
                        };

                        hierarchicalMenuParams.templates.item = '' +
                            '<div class="ais-hierearchical-link-wrapper">' +
                            '<a class="{{cssClasses.link}}" href="{{url}}">{{name}}' +
                            '{{#isRefined}}<img class="cross-circle" src="<?php echo Mage::getBaseUrl(); ?>/skin/frontend/base/default/algoliasearch/cross-circle.png"/>{{/isRefined}}' +
                            '<span class="{{cssClasses.count}}">{{#helpers.formatNumber}}{{count}}{{/helpers.formatNumber}}</span></a>' +
                            '</div>';

                        if (algoliaConfig.request.path.length > 0) {
                            hierarchicalMenuParams.rootPath = algoliaConfig.request.path;
                        }

                        return algoliaBundle.instantsearch.widgets.hierarchicalMenu(hierarchicalMenuParams);
                    }
                };

                $.each(algoliaConfig.facets, function (i, facet) {

                    if (facet.attribute.indexOf("price") !== -1)
                        facet.attribute = facet.attribute + algoliaConfig.priceKey;

                    facet.wrapper = wrapper;

                    var templates = {
                        header: '<div class="name">' + (facet.label ? facet.label : facet.attribute) + '</div>'
                    };

                    var widget = customAttributeFacet[facet.attribute] !== undefined ?
                        customAttributeFacet[facet.attribute](facet, templates) :
                        getFacetWidget(facet, templates);

                    search.addWidget(widget);
                });

                /** Pagination **/
                search.addWidget(
                    algoliaBundle.instantsearch.widgets.pagination({
                        container: '#instant-search-pagination-container',
                        cssClass: 'algolia-pagination',
                        showFirstLast: false,
                        labels: {
                            previous: '<?php echo $this->__('Previous page'); ?>',
                            next: '<?php echo $this->__('Next page'); ?>'
                        },
                        scrollTo: 'body'
                    })
                );

                search.start();

                var instant_search_bar = $(instant_selector);
                if (instant_search_bar.is(":focus") === false)
                {
                    if ($(window).width() > 992) {
                        instant_search_bar.focus().val('');
                    }
                    instant_search_bar.val(search.helper.state.query);
                }

                $('#search_mini_form').addClass('search-page');

                $(document).on('click', '.ais-hierarchical-menu--link, .ais-refinement-list--checkbox', function () {
                    if ($(window).width() > 992) {
                        instant_search_bar.focusWithoutScrolling();
                        instant_search_bar.val('');
                    }
                    instant_search_bar.val(search.helper.state.query);
                });
            }

            /*****************
             **
             ** AUTOCOMPLETION MENU
             **
             *****************/

            /** keep it after instant search to be able to bind to the recreated <div id="algolia-autocomplete-container"></div> **/
            if (algoliaConfig.autocomplete.enabled) {
                var sources = [];

                var i = 0;
                // Loop through each section (products, categories, pages, suggestions and additional sections)
                $.each(algoliaConfig.autocomplete.sections, function (name, section) {
                    var source = getAutocompleteSource(section, algolia_client, $, i);

                    if (source)
                        sources.push(source);

                    if (section.name !== 'suggestions')
                        i++;

                });

                // setup the auto-completed search input
                $(algoliaConfig.autocomplete.selector).each(function (i) {
                    var menu = $(this);
                    var options = {
                        hint: false,
                        templates: {
                            dropdownMenu: '#menu-template'
                        },
                        dropdownMenuContainer: "#algolia-autocomplete-container",
                        debug: true
                    };

                    if (algoliaConfig.removeBranding === false) {
                        options.templates.footer = '<div class="footer_algolia"><span>Powered by</span> <a href="https://www.algolia.com/?utm_source=magento&utm_medium=link&utm_campaign=magento_autocompletion_menu" target="_blank"><img src="<?php echo Mage::getBaseUrl(); ?>/skin/frontend/base/default/algoliasearch/algolia-logo.png" /></a></div>';
                    }

                    $(this)
                        .autocomplete(options, sources)
                        .parent()
                        .attr('id', 'algolia-autocomplete-tt')
                        .on('autocomplete:updated', function (e) {
                            /** 100% height of floating divs **/
                            $(".other-sections").css('min-height', '0');
                            $(".aa-dataset-products").css('min-height', '0');
                            var height = Math.max($(".other-sections").outerHeight(), $(".aa-dataset-products").outerHeight());
                            $(".aa-dataset-products").css('min-height', height);

                            /** Stick menu to the input **/
                            var targetOffset = Math.round(menu.offset().top + menu.outerHeight());
                            var currentOffset = Math.round($('#algolia-autocomplete-container').offset().top);
                            var currentTop = parseInt($('#algolia-autocomplete-container .aa-dropdown-menu').css('top'), 10);

                            if (currentTop == 0 && currentTop !== (currentOffset - targetOffset)) {
                                $('#algolia-autocomplete-container .aa-dropdown-menu').css('top', (currentTop - (currentOffset - targetOffset)) + 'px');
                            }
                        });
                });
            }
        });
    });

    //]]>
</script>